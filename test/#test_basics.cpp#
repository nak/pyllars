#include <pyllars/pyllars_pointer.h>

typedef const char* cstring;

using namespace __pyllars_internal;

template<>
const char* const PythonWrapper<int>::name = "type_int";

template<>
const char* const PythonCPointerWrapper<int>::name = "ptr_int";

template<>
PyMethodDef PythonWrapper<int>::_methods[] = {NULL};

template<>
PyMemberDef PythonWrapper<int>::_members[] = {NULL};


#ifndef PyMODINIT_FUNC	/* declarations for DLL import/export */
#define PyMODINIT_FUNC void
#endif
PyMODINIT_FUNC
initmod() {

  PyObject* m = Py_InitModule3("test", NULL,
			       "Test of pyllars generation");

  init_pyllars_pointer< int>( m );
}

int main(){
  Py_Initialize();
  initmod();
  auto tyobj = &PythonWrapper<int>::Type
  auto obj = PyObject_CallObject( (PyObject*)tyobj, NULL);
  if (!obj){
    return -1;
  }
  auto pArgs = PyTuple_New(1);
  PyTuple_SetItem(pArgs, 0, obj);  
  PyObject* o = PyObject_CallObject((PyObject*)&PythonCPointerWrapper<int>::Type, pArgs);
  if (o == NULL){
    printf("NULL O\n");
  }
}
